{"remainingRequest":"/home/arc/Library/Software/Frontend/_projects/markdown-viewer/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/arc/Library/Software/Frontend/_projects/markdown-viewer/node_modules/saber/dist/vue-renderer/transform-template-loader.js??ref--1-0!/home/arc/Library/Software/Frontend/_projects/markdown-viewer/node_modules/vue-loader/lib/index.js??ref--3-0!/home/arc/Library/Software/Frontend/_projects/markdown-viewer/node_modules/saber/dist/vue-renderer/saber-page-loader.js??ref--3-1!/home/arc/Library/Software/Frontend/_projects/markdown-viewer/pages/index.md?vue&type=template&id=6e2352c4&saberPage=0096fab0","dependencies":[{"path":"/home/arc/Library/Software/Frontend/_projects/markdown-viewer/pages/index.md","mtime":1617277299702},{"path":"/home/arc/Library/Software/Frontend/_projects/markdown-viewer/.saber/pages/0096fab0.saberpage","mtime":1617277299734},{"path":"/home/arc/Library/Software/Frontend/_projects/markdown-viewer/node_modules/cache-loader/dist/cjs.js","mtime":1617275578335},{"path":"/home/arc/Library/Software/Frontend/_projects/markdown-viewer/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1617275582324},{"path":"/home/arc/Library/Software/Frontend/_projects/markdown-viewer/node_modules/saber/dist/vue-renderer/transform-template-loader.js","mtime":1617275578311},{"path":"/home/arc/Library/Software/Frontend/_projects/markdown-viewer/node_modules/vue-loader/lib/index.js","mtime":1617275582324},{"path":"/home/arc/Library/Software/Frontend/_projects/markdown-viewer/node_modules/saber/dist/vue-renderer/saber-page-loader.js","mtime":1617275578311}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2xheW91dC1tYW5hZ2VyJyxbX2MoJ3AnLFtfdm0uX3YoIkRpcmVjdG9yeSBmb3IgZXZlbnQgaWRlYXMgYW5kIHByb3Bvc2FscyBmb3IgZGV2ZWxvcGVyIGNvbW11bml0aWVzLCBwbGFjaW5nIERTQyBLR0VDIGluIGZvY3VzLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6IjEtMS1ldmVudHMtYnktdGhlLWNvbW11bml0eSJ9fSxbX3ZtLl92KCIxLjEgRXZlbnRzIGJ5IHRoZSBjb21tdW5pdHkiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJFdmVudHMgaG9zdGVkLCBjYW4gZWl0aGVyIGJlIGRvbWFpbiBzcGVjaWZpYyBvZiBhIG1peCBvZiBtdWx0aXBsZSBkb21haW5zLiIpXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3ByZTp0cnVlLGF0dHJzOnsiY2xhc3MiOiJzYWJlci1oaWdobGlnaHQiLCJkYXRhLWxhbmciOiIifX0sW19jKCdwcmUnLHtwcmU6dHJ1ZSxhdHRyczp7ImNsYXNzIjoic2FiZXItaGlnaGxpZ2h0LWNvZGUgbGFuZ3VhZ2UtdGV4dCJ9fSxbX2MoJ2NvZGUnLHtwcmU6dHJ1ZSxhdHRyczp7ImNsYXNzIjoibGFuZ3VhZ2UtdGV4dCJ9fSxbX3ZtLl92KCLilJzilIDilIAgRGV2ZWxvcGVyIFN1bW1pdCAgICAgICAgICAgIFBhbmVsIERpc2N1c3Npb25zIC8gV29ya3Nob3BzXG7ilJzilIDilIAgRGV2ZWxvcGVyIFRlY2ggRmVzdCAgICAgICAgIFRlY2huaWNhbCBDb21wZXRpdGlvbnNcbuKUnOKUgOKUgCBEZXYgRXhwbyAgICAgICAgICAgICAgICAgICAgUHJvamVjdCBFeGhpYml0aW9uICAgICAgIFxu4pSc4pSA4pSAIEhhY2tkYXlzICAgICAgICAgICAgICAgICAgICBJbnRlbnNpdmUgSGFja2F0aG9ucyAgICAgICAgICAgICAgICAgIFxu4pSc4pSA4pSAIE9wZW4gU291cmNpbmcgU2Vhc29uICAgICAgICBPcGVuIFNvdXJjZSBTb2Z0d2FyZSBEZXZlbG9wbWVudCBcbuKUnOKUgOKUgCBTcGVha2VyIFNlc3Npb25zICAgICAgICAgICAgRG9tYWluIHNwZWNpZmljIGNvbmZlcmVuY2VzXG7ilJzilIDilIAgTWluaSBQcm9qZWN0cyAgICAgICAgICAgICAgIFxu4pSc4pSA4pSAIENvbW11bml0eSBQcm9qZWN0cyIpXSldKV0pLF9jKCdwJyx7YXR0cnM6eyJhbGlnbiI6ImNlbnRlciJ9fSxbX2MoJ3NhYmVyLWxpbmsnLHthdHRyczp7InRvIjoiIzExMS1kZXZlbG9wZXItc3VtbWl0In19LFtfdm0uX3YoIkRldiBTdW1taXQiKV0pLF92bS5fdigiIHwgIiksX2MoJ3NhYmVyLWxpbmsnLHthdHRyczp7InRvIjoiIzExMi1kZXZlbG9wZXItdGVjaC1mZXN0In19LFtfdm0uX3YoIlRlY2ggRmVzdCIpXSksX3ZtLl92KCIgfCAiKSxfYygnc2FiZXItbGluaycse2F0dHJzOnsidG8iOiIjMTEzLWRldi1leHBvIn19LFtfdm0uX3YoIkRldiBFeHBvIildKSxfdm0uX3YoIiB8ICIpLF9jKCdzYWJlci1saW5rJyx7YXR0cnM6eyJ0byI6IiMxMTQtaGFja2RheXMifX0sW192bS5fdigiSGFja0RheXMiKV0pLF92bS5fdigiIHwgIiksX2MoJ3NhYmVyLWxpbmsnLHthdHRyczp7InRvIjoiIzExNS1vcGVuLXNvdXJjaW5nLXNlYXNvbiJ9fSxbX3ZtLl92KCJPcGVuIFNvdXJjZSIpXSksX3ZtLl92KCIgfCAiKSxfYygnc2FiZXItbGluaycse2F0dHJzOnsidG8iOiIjMTE2LXNwZWFrZXItc2Vzc2lvbnMifX0sW192bS5fdigiU3BlYWtlciBTZXNzaW9ucyIpXSksX3ZtLl92KCIgfCAiKSxfYygnc2FiZXItbGluaycse2F0dHJzOnsidG8iOiIjMTE3LW1pbmktcHJvamVjdHMifX0sW192bS5fdigiUHJvamVjdHMiKV0pXSwxKSxfdm0uX3YoIiAiKSxfYygnaHInKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiMS0xLTEtZGV2ZWxvcGVyLXN1bW1pdCJ9fSxbX3ZtLl92KCIxLjEuMSBEZXZlbG9wZXIgU3VtbWl0IildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkFib3V0IildKSxfYygnYnInKSxfdm0uX3YoIlxuRGV2IFN1bW1pdCBpbmNsdWRlcyBwYW5lbCBkaXNjdXNzaW9ucywgd29ya3Nob3BzLCBsZWN0dXJlcyBldGMgbWFpbmx5IGZvY3VzZWQgb24gdGhlIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGNoYW5nZXMgdGhhdCB0ZWNobm9sb2d5IGlzIGJyaW5naW5nIHRvIHRoZSB3b3JsZCwgYWxvbmcgd2l0aCBpdHMgZnV0dXJlIGFzcGVjdHMgYXMgd2VsbCBhcyBpbnNpZ2h0cyBvZiBzb21lIGVtZXJnaW5nIHRlY2hub2xvZ2llcy4gVGhlIG1vdGl2ZSBvZiBkZXYgc3VtbWl0LCBpZGVhbGx5LCBpcyB0byBwcmVzZW50IHRoZSByZWFsIHBpY3R1cmUgb2YgdmFyaW91cyB0ZWNobm9sb2dpZXMgaW4gdGhlIHdvcmxkLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEdXJhdGlvbiIpXSksX2MoJ2JyJyksX3ZtLl92KCJcbjIgZGF5cyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEU0MgS0dFQyIpXSksX2MoJ2JyJyldKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIkNvZGUgTmFtZTogRGV2IE90c2F2IildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlByb3NwZWN0czogSW52aXRpbmcgb3VyIHByb2Zlc3NvcnMsIGFsdW1uaSBvciBzZW5pb3JzIHdobyBoYXZlIGJlZW4gaW50byB2YXJpb3VzIGZpZWxkcyBvZiB0ZWNobm9sb2d5LCB0byBjb21lIHVwIGZvciBwYW5lbCBkaXNjdXNzaW9ucyBvbiB0b3BpY3MgbGlrZSBcIkhvdyBBSSB3aWxsIGNoYW5nZSB0aGUgd29ybGRcIiwgXCJFeHBsb3JpbmcgdGhlIGZ1dHVyZSBvZiBBdWdtZW50ZWQgUmVhbGl0eVwiIGV0Yy4gT2YgY291cnNlLCB0aGUgdGVhbSBuZWVkcyB0byBkaXNjdXNzIGFuZCBwaXRjaCB1cCBldmVyeXRoaW5nLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJTdWdnZXN0ZWQgRGF0ZTogSnVzdCBiZWZvcmUgRGl3YWxpIEhvbGlkYXlzIChEZWVwb3RzYXYpIHwgT2RkIFNlbWVzdGVyIildKV0pLF92bS5fdigiICIpLF9jKCdocicpLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiIxLTEtMi1kZXZlbG9wZXItdGVjaC1mZXN0In19LFtfdm0uX3YoIjEuMS4yIERldmVsb3BlciBUZWNoIEZlc3QiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiQWJvdXQiKV0pLF9jKCdicicpLF92bS5fdigiXG5EZXZlbG9wZXIgVGVjaCBGZXN0IC0gdGhlIGZlc3RpdmFsIG9mIGV2ZW50cywgaG9zdGluZyBtdWx0aXBsZSBjb21wZXRpdGlvbnMgbGlrZSBDb2RpbmcgbWFyYXRob25zLCBUZWNoIFF1aXosIFJvYm8gV2FycywgaGFja2F0aG9ucyBvbiBBSS1XZWItQXBwLUlvVCwgQ2FwdHVyZS1UaGUtRmxhZyBvciBldmVuIGEgbWluaSB0cmVhc3VyZSBodW50IHZlcnNpb24gb2YgIiksX2MoJ3NhYmVyLWxpbmsnLHthdHRyczp7InRvIjoiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ2ljYWRhXzMzMDEifX0sW192bS5fdigiQ2ljYWRhIDMzMDEiKV0pXSwxKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkR1cmF0aW9uIildKSxfYygnYnInKSxfdm0uX3YoIlxuMiBkYXlzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkRTQyBLR0VDIildKSxfYygnYnInKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigiQ29kZSBOYW1lOiBEZXYgTWVsYSIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJQcm9zcGVjdHM6IFdlIGNhbiBjb2xsYWJvcmF0ZSB3aXRoIFJvYm90aWNzIFNvY2lldHkgYW5kIEtleUdlbiBHcm91cCB0byBob3N0IGV2ZW50cyB0b2dldGhlci4gTW9zdCBvZiB0aGUgZXZlbnRzIGFyZSB2aXJ0dWFsIHNvIGV2ZW4gaWYgRXNwZWt0cm8gZGlkbid0IGhhcHBlbiBkdWUgdG8gQ09WSUQsIHdlIHNob3VsZCBzdGlsbCBob3N0cyB0aGVzZSBldmVudHMgb24gYSB2aXJ0dWFsIGJhc2lzLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJTdWdnZXN0ZWQgRGF0ZTogRXZlbiBTZW1lc3RlciIpXSldKSxfdm0uX3YoIiAiKSxfYygnaHInKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiMS0xLTMtZGV2LWV4cG8ifX0sW192bS5fdigiMS4xLjMgRGV2IEV4cG8iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiQWJvdXQiKV0pLF9jKCdicicpLF92bS5fdigiXG5EZXZlbG9wZXIgRXhwbyBpcyBhbm90aGVyIHRlY2huaWNhbCBldmVudCB3aGVyZSBzdHVkZW50cyBhcmUgcHJvdmlkZWQgd2l0aCBhIHBsYXRmb3JtIHRvIHNob3djYXNlIGFuZCBkZW1vbnN0cmF0ZSB0aGVpciBwcm9qZWN0cywgaW5ub3ZhdGl2ZW5lc3MgYW5kIGNyZWF0aXZpdHkuIFByb2plY3RzIGZyb20gZGlzdGluY3RpdmUgZG9tYWlucyBsaWtlIEdhbWUgRGV2LCBBUi1WUi1NUiwgSW50ZXJuZXQgb2YgVGhpbmdzIGFwYXJ0IGZyb20gYXBwLCB3ZWIgYW5kIEFJIHdpbGwgaGVscCBpbmN1bGNhdGluZyBpbnRlcmVzdHMgaW4gdGhlc2UgZG9tYWlucyBhbW9uZyBzdHVkZW50cy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiRHVyYXRpb24iKV0pLF9jKCdicicpLF92bS5fdigiXG4yIGRheXMiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiRFNDIEtHRUMiKV0pLF9jKCdicicpXSksX3ZtLl92KCIgIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX3ZtLl92KCJDb2RlIE5hbWU6IERldiBFeHBvIC8gUHJvamVjdCBFeHBvIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlByb3NwZWN0czogVGhpcyBjYW4gYWdhaW4gYmUgYSBjb2xsYWJvcmF0aXZlIGV2ZW50IHdpdGggb3RoZXIgY29sbGVnZSBncm91cHMuIFN0dWRlbnRzIHdobyBhcmUgdG93YXJkcyByZXNlYXJjaCBjYW4gYWxzbyBiZSBpbnZpdGVkIHRvIHRoaXMgZXZlbnQuIFdoZW4gaXQgY29tZXMgdG8gaW5zcGlyaW5nIHN0dWRlbnRzIHRvIGdldCBpbnRvIGRldmVsb3BtZW50LCB0aGlzIGV2ZW50IGlzIG9uZSBvZiB0aGUgbW9zdCBlZmZlY3RpdmUgb25lcy4iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiU3VnZ2VzdGVkIERhdGU6IEJlZ2lubmluZyBvZiBPZGQgU2VtZXN0ZXIiKV0pXSksX3ZtLl92KCIgIiksX2MoJ2hyJyksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6IjEtMS00LWhhY2tkYXlzIn19LFtfdm0uX3YoIjEuMS40IEhhY2tkYXlzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkFib3V0IildKSxfYygnYnInKSxfdm0uX3YoIlxuSGFja2RheXMgYXJlIDEgb3IgMiBkYXlzIGxvbmcgSGFja2F0aG9ucy4gSGFja2F0aG9ucyBjYW4gYmUgb2YgbWFueSB0eXBlcyAtIGFsZ29yaXRobWljIGNoYWxsZW5nZXMsIG1hY2hpbmUgbGVhcm5pbmcgY2hhbGxlbmdlcyBvciBhIG1pbmkgdmVyc2lvbiBvZiBHb29nbGUgU29sdXRpb24gQ2hhbGxlbmdlIHdoZXJlIHN0dWRlbnRzIGFyZSBwcm92aWRlZCB3aXRoIGEgcGxhdGZvcm0gdG8gc29sdmUgYSBwcmVzc2luZyBwcm9ibGVtIHdlIGZhY2UgaW4gb3VyIGRhaWx5IGxpdmVzLiBIYWNrYXRob25zIGNhbiBiZSBjb25kdWN0ZWQgbW9yZSBmcmVxdWVudGx5IHRoYW4gdGhlIG90aGVyIGV2ZW50cyBhbmQgaXQgd291bGQgYWxzbyBoZWxwIHBhcnRpY2lwYW50cyBwZXJmb3JtIGJldHRlciBpbiBiaWdnZXIgaGFja2F0aG9ucyBsaWtlIFNJSCBhbmQgU29sdXRpb24gQ2hhbGxlbmdlLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEdXJhdGlvbiIpXSksX2MoJ2JyJyksX3ZtLl92KCJcbjEgb3IgMiBkYXkgbG9uZyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEU0MgS0dFQyIpXSksX2MoJ2JyJyldKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIkNvZGUgTmFtZTogRGV2IEV4IildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlByb3NwZWN0czogV2UgY2FuIGhhdmUgYSBzcGVjaWFsICdEZXZlbG9wZXIgV2Vlaycgb2YgaGFja2F0aG9ucyBkZXNpZ25lZCB0aGlzIHdheTpcbiIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigiTW9uZGF5LVR1ZXNkYXk6ICAgICAgIFByb2JsZW0gU29sdmluZyAoRFMgQWxnbywgQ1ApIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlR1ZXNkYXktV2VkbmVzZGF5OiAgICBNYWNoaW5lIExlYXJuaW5nIENoYWxsZW5nZSIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJXZWRuZXNkYXktVGh1cnNkYXk6ICAgU29mdHdhcmUgQ2hhbGxlbmdlIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlRodXJzZGF5LUZyaWRheTogICAgICBIYXJkd2FyZSBDaGFsbGVuZ2UgKElvVCwgRWxlY3Ryb25pY3MsIFJvYm90aWNzKSIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJGcmlkYXktU2F0dXJkYXk6ICAgICAgRXRoaWNhbCBIYWNraW5nIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlN1bmRheTogICAgICAgICAgICAgICBBbm5vdW5jZW1lbnRzIGFuZCBQcml6ZSBEaXN0cmlidXRpb24iKV0pXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlN1Z2dlc3RlZCBEYXRlOiBBcm91bmQgQ2hyaXN0bWFzIildKV0pLF92bS5fdigiICIpLF9jKCdocicpLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiIxLTEtNS1vcGVuLXNvdXJjaW5nLXNlYXNvbiJ9fSxbX3ZtLl92KCIxLjEuNSBPcGVuIFNvdXJjaW5nIFNlYXNvbiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJBYm91dCIpXSksX2MoJ2JyJyksX3ZtLl92KCJcblRoZSBjb2xsZWdlLWxldmVsIGVkaXRpb24gb2YgR29vZ2xlIFN1bW1lciBvZiBDb2RlLCBmb2N1c2VkIG9uIGluc3BpcmluZyBtb3JlIHN0dWRlbnQgZGV2ZWxvcGVycyBpbnRvIG9wZW4gc291cmNlIHNvZnR3YXJlIGRldmVsb3BtZW50LiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEdXJhdGlvbiIpXSksX2MoJ2JyJyksX3ZtLl92KCJcbjIrIG1vbnRocyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEU0MgS0dFQyIpXSksX2MoJ2JyJyldKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIkNvZGUgTmFtZTogS0dFQyBTdW1tZXIgb2YgQ29kZSBvciBLU29DIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlByb3NwZWN0czogRFNDIEtHRUMgc2hvdWxkIGhvc3QgYXRsZWFzdCA2LTcgcHJvamVjdHMgZnJvbSB2YXJpb3VzIGRvbWFpbnMsIGZyb20gb3VyIHBhcnRuZXIgY2x1YnMgYW5kIHNlbmlvcnMgd2hlcmVpbiwgdGhlcmUgbXVzdCBiZSBtdWx0aXBsZSBpc3N1ZXMgKGZlYXR1cmUgcmVxdWVzdHMsIGJ1Z3MgZXRjKSBvZiB2YXJpb3VzIGxldmVscyBvZiBkaWZmaWN1bHRpZXMgZm9yIHRoZSBwYXJ0aWNpcGFudHMgdG8gc29sdmUgYW5kIGNvbnRyaWJ1dGUgdG8uIFdlIHNob3VsZG4ndCBoYXZlIGFueSByZXdhcmRzIG9yIGxlYWRlcmJvYXJkcyBhcyBpdCBwcm9tb3RlcyBiYWQgb3BlbiBzb3VyY2UgYmVoYXZpb3VyLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJTdWdnZXN0ZWQgRGF0ZTogTWF5IC0gSnVuZSIpXSldKSxfdm0uX3YoIiAiKSxfYygnaHInKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiMS0xLTYtc3BlYWtlci1zZXNzaW9ucyJ9fSxbX3ZtLl92KCIxLjEuNiBTcGVha2VyIFNlc3Npb25zIildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkFib3V0IildKSxfYygnYnInKSxfdm0uX3YoIlxuU3BlYWtlciBTZXNzaW9ucyBvZiBJbmZvIFNlc3Npb25zIGFyZSBldmVudHMgd2hlcmUgc3BlYWtlcnMgYXJlIGludml0ZWQgdG8gc2hhcmUga25vd2xlZGdlIGFib3V0IHNvbWUgcGFydGljdWxhciBmaWVsZCBvciB0b3BpYywgZmVhdHVyaW5nIGluZm9ybWF0aXZlIHRhbGtzIGFuZCBRJkEgc2Vzc2lvbnMuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkR1cmF0aW9uIildKSxfYygnYnInKSxfdm0uX3YoIlxuMS0yIGhvdXJzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkRTQyBLR0VDIildKSxfYygnYnInKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigiQ29kZSBOYW1lOiBJbmZvIFNlc3Npb24iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiUHJvc3BlY3RzOiBXZSBoYXZlIGhhZCBhIGxvdCBvZiBpbmZvIHNlc3Npb25zIGluIG91ciBwYXN0IHNlc3Npb24sIGhhdmluZyBhdCBsZWFzdCAxIHNlc3Npb24gcGVyIDE1IGRheXMuIEknZCBzdWdnZXN0IHRoYXQgd2Ugc2hvdWxkIG1vdmUgb3VyIGZvY3VzIG1vcmUgdG93YXJkcyBwcm9qZWN0IHJlbGF0ZWQgYWN0aXZpdGllcyB0aGlzIHllYXIgYW5kIGhhdmUgc3BlYWtlciBzZXNzaW9ucyBiZWZvcmUgc3RhcnRpbmcgYW55IHByb2plY3RzIG9yIGV2ZW50cy4gVGhpcyB3YXksIG1lbWJlcnMgd2lsbCBiZSBhYmxlIHRvIGxlYXJuIGFzIHdlbGwgYXMgaW1wbGVtZW50IHRoZSBsZWFybmluZyB3aGVuIHRoZXkgcGFydGljaXBhdGUgaW4gYnVpbGRpbmcgdGhlIHByb2plY3QuIFRoaXMgc3lzdGVtIHdpbGwgYWxzbyBlbmNvdXJhZ2UgbW9yZSBzdHVkZW50cyB0byBwYXJ0aWNpcGF0ZSBhbmQgdHJ5IG91dCB0aGUgdG9waWMgd2hpY2ggd2UgaGFkIHRoZSBzZXNzaW9uIG9uLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJTdWdnZXN0ZWQgRGF0ZTogQmVmb3JlIGFueSBwcm9qZWN0IG9yIGFjdGl2aXR5LiBTYXkgd2UgYXJlIGdvaW5nIHRvIGhvc3QgYSBjb21tdW5pdHkgcHJvamVjdCB0aGF0J2xsIHVzZSBGaXJlYmFzZS4gU28gaXQnZCBiZSBpZGVhbCB0byBoYXZlIGEgc3BlYWtlciBzZXNzaW9uIG9uIEZpcmViYXNlIHJpZ2h0IGJlZm9yZSB3ZSBzdGFydCBvZmYgd2l0aCB0aGUgcHJvamVjdC4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2hyJyksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6IjEtMS03LW1pbmktcHJvamVjdHMifX0sW192bS5fdigiMS4xLjcgTWluaSBQcm9qZWN0cyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJBYm91dCIpXSksX2MoJ2JyJyksX3ZtLl92KCJcbk1pbmkgUHJvamVjdHMgYXJlIG1vcmUgaW5jbGluZWQgdG8gbGVhcm5pbmcgc2hvcnQgdG9waWNzLiBNaW5pIHByb2plY3RzIGNhbiBiZSBhc3NpZ25lZCBhcyB0YXNrcywgZWc6IEJ1aWxkaW5nIGEgSmVreWxsIGJhc2VkIHBvcnRmb2xpbywgb3IgdGhleSBjYW4gYmUgb3JnYW5pemVkIGFmdGVyIGFueSBpbmZvIHNlc3Npb25zLlxuIiksX2MoJ3N0cm9uZycsW192bS5fdigiRHVyYXRpb24iKV0pLF9jKCdicicpLF92bS5fdigiXG5MZXNzIHRoYW4gMTAgaG91cnMuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkRTQyBLR0VDIildKSxfYygnYnInKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigiQ29kZSBOYW1lOiAtLSIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJQcm9zcGVjdHM6IEluaXRpYWxseSwgd2Ugc2hvdWxkIG9yZ2FuaXplIG1pbmkgcHJvamVjdHMgZm9yIHRoZSBjb3JlIHRlYW0gbWVtYmVycywgc28gYXMgdG8gaW1wcm92ZSB0aGUgYm9uZGluZyBhbmQgdGVhbSB3b3JrLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJTdWdnZXN0ZWQgRGF0ZTogMSBtaW5pIHByb2plY3QgcGVyIG1vbnRoIildKV0pLF92bS5fdigiICIpLF9jKCdocicpLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiIxLTEtOC1jb21tdW5pdHktcHJvamVjdHMifX0sW192bS5fdigiMS4xLjggQ29tbXVuaXR5IFByb2plY3RzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkFib3V0IildKSxfYygnYnInKSxfdm0uX3YoIlxuQ29tbXVuaXR5IFByb2plY3RzIGFyZSBsYXJnZSBzY2FsZWQgcHJvamVjdCBidWlsdCB0byBpbnNwaXJlIHRoZSBjb21tdW5pdHkgYW5kIGVuY291cmFnZSBzdHVkZW50cyB0byBsZWFybiBuZXcgdGVjaG5vbG9naWVzIGluIGEgbG93LXJpc2ssIGhhbmRzLW9uIGVudmlyb25tZW50LiBUaGUgYWltIG9mIGNvbW11bml0eSBwcm9qZWN0cyBpcyBub3QganVzdCB0byBicmluZyB2YWx1ZSB0byB0aGUgY29tbXVuaXR5IGJ1dCBhbHNvIHRvIGJ1aWxkIHNvbWV0aGluZyB2YWx1YWJsZSBhbmQgaGVscGZ1bCBmb3Igb3RoZXJzLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEdXJhdGlvbiIpXSksX2MoJ2JyJyksX3ZtLl92KCJcbn52YXJpYWJsZS4gSWRlYWwgZHVyYXRpb24gaXMgMjEgZGF5cy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiRFNDIEtHRUMiKV0pLF9jKCdicicpXSksX3ZtLl92KCIgIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX3ZtLl92KCJDb2RlIE5hbWU6IC0tIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlByb3NwZWN0czogV2Ugc2hvdWxkIGNyZWF0ZSBhbmQgbWFpbnRhaW4gYSByZXBvc2l0b3J5IG9mIHByb2plY3QgaWRlYXMuIFdlIGNhbiBhbHNvIGluY2x1ZGUgcHJvamVjdHMgdGhhdCBhcmUgYnVpbHQgaW4gYSBqaWZmeSBpbiBoYWNrYXRob25zIGFuZCBleHRlbmQgdGhlbSB0byBjb21tdW5pdHkgcHJvamVjdHMuIFNpbmNlIHdlIGhhdmUgNSB0ZWFtcyBmb3IgZGlmZmVyZW50IGRvbWFpbnMgb2YgdGVjaCwgYSBwcm9qZWN0IGZyb20gZWFjaCBkb21haW4gd2lsbCBiZSBpZGVhbCBmb3IgYSBzZXNzaW9uISIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJTdWdnZXN0ZWQgRGF0ZTogTWlkIHNlc3Npb24iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2hyJyksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6IjEtMi1kc2Mtc3BlY2lmaWMtZXZlbnRzIn19LFtfdm0uX3YoIjEuMiBEU0MgU3BlY2lmaWMgRXZlbnRzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhlcmUgYXJlIHNvbWUgZXZlbnRzIHRoYXQgYXJlIGhvc3RlZCBieSBHb29nbGUgaXRzZWxmIGFuZCBjb25kdWN0ZWQgdGhyb3VnaCBEU0NzIildKSxfdm0uX3YoIiAiKSxfYygnb2wnLFtfYygnbGknLFtfdm0uX3YoIkFuZHJvaWQgU3R1ZHkgSmFtcyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCIzMCBEYXlzIG9mIEdvb2dsZSBDbG91ZCIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCIzMCBEYXlzIG9mIEZsdXR0ZXIiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiR29vZ2xlIFNvbHV0aW9uIENoYWxsZW5nZSIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiMS0zLWNvbnRyaWJ1dGlvbiJ9fSxbX3ZtLl92KCIxLjMgQ29udHJpYnV0aW9uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiRmVlbCBmcmVlIHRvIGFkZCB5b3VyIHBlcnNvbmFsIHN1Z2dlc3Rpb25zIG9yIGlkZWFzIHRvIGFueSBvZiB0aGUgc2VjdGlvbnMiKV0pXSl9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}